#!/usr/bin/env rundklet
add_note <<~Note
  https://hub.docker.com/_/nginx/
Note

register :host_port, 18080

#https://docs.docker.com/engine/reference/builder/#usage
write_dockerfile <<~Desc
  FROM nginx:1.15-alpine
  LABEL <%=image_labels%>
  #COPY nginx.conf /etc/nginx/nginx.conf
  #COPY static-html-directory /usr/share/nginx/html
  #CMD nginx -g 'daemon off;'
Desc

task :main do
  system_run <<~Desc
    #{dkrun_cmd(named: true)} -d -p #{fetch(:host_port)}:80 \
      -v #{script_path}/conf/nginx.conf:/etc/nginx/nginx.conf \
      -v #{script_path}/site/html:/usr/share/nginx/html \
      #{docker_image}   
    curl http://localhost:#{fetch(:host_port)}
    docker logs -t --details #{container_name}
    echo http://localhost:#{fetch(:host_port)}
  Desc
end

custom_commands do
  desc 'try', ''
  def try
    cname = 'dkng1'
    system_run <<~Desc
      #{dkrun_cmd} -d --name #{cname} -p 80 #{docker_image}   
      docker ps -f ancestor=#{docker_image}
      docker rm -f #{cname}
    Desc
  end
end

__END__

docker run --name ng1 -v /some/content:/usr/share/nginx/html:ro -d nginx
docker run --name ng1 -v /host/path/nginx.conf:/etc/nginx/nginx.conf:ro -d nginx
docker cp dkng:/usr/share/nginx/html nginx/site/html

# docker-compose.yml
web:
  image: nginx
  volumes:
   - ./mysite.template:/etc/nginx/conf.d/mysite.template
  ports:
   - "8080:80"
  environment:
   - NGINX_HOST=foobar.com
   - NGINX_PORT=80
  command: /bin/bash -c "envsubst < /etc/nginx/conf.d/mysite.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"
  #The mysite.template file may then contain variable references like this:
  #listen ${NGINX_PORT};

nginx -h
nginx -T
nginx -V

nginx-debug
