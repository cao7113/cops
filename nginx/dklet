#!/usr/bin/env rundklet
add_note <<~Note
  https://hub.docker.com/_/nginx/
Note

write_dockerfile <<~Desc
  FROM nginx:1.15-alpine
  LABEL <%=image_labels%>
  #CMD nginx -g 'daemon off;'
Desc

task :main do
  system_run <<~Desc
    #{dkrun_cmd(named: true)} -d -p :80 -p 443:443 \
      -v #{script_path}/conf/nginx.conf:/etc/nginx/nginx.conf \
      -v #{script_path}/conf/conf.d:/etc/nginx/conf.d \
      -v #{script_path}/site/html:/usr/share/nginx/html \
      -v #{volumes_root}/dev-openssl-default:/certs \
      #{docker_image}   
  Desc
end

custom_commands do
  desc '', ''
  def http
    system_run <<~Desc
      curl --head http://localhost:#{host_port_for(80)}
    Desc
  end

  desc '', ''
  def https
    system_run <<~Desc
      curl --insecure --head https://localhost:#{host_port_for(443)}
    Desc
  end
end

__END__

docker cp dkng:/usr/share/nginx/html nginx/site/html

# docker-compose.yml
web:
  image: nginx
  volumes:
   - ./mysite.template:/etc/nginx/conf.d/mysite.template
  ports:
   - "8080:80"
  environment:
   - NGINX_HOST=foobar.com
   - NGINX_PORT=80
  command: /bin/bash -c "envsubst < /etc/nginx/conf.d/mysite.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"
  #The mysite.template file may then contain variable references like this:
  #listen ${NGINX_PORT};

nginx -h
nginx -T
nginx -V

nginx-debug
