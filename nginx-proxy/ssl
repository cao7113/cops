#!/usr/bin/env rundklet
add_note <<~Note
  Automated nginx proxy for Docker containers using docker-gen
  https://github.com/jwilder/nginx-proxy
  https://hub.docker.com/r/jwilder/nginx-proxy/
  ssl support
  https://github.com/JrCs/docker-letsencrypt-nginx-proxy-companion
Note

register_net
register :appname, 'nginx-proxy'
register_docker_image 'jwilder/nginx-proxy:alpine-0.7.0'

task :main, preclean: false do
  certs_path = app_volumes.join("certs")
  cmds = <<~Desc
    #{dkrun_cmd(named: true)} -d \
      -p 80:80 -p 443:443 \
      -v #{certs_path}:/etc/nginx/certs:ro \
      --restart=always \
      -v /etc/nginx/vhost.d \
      -v /usr/share/nginx/html \
      -v /var/run/docker.sock:/tmp/docker.sock:ro \
      --label com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy \
      #{docker_image}
  Desc
  #- DEFAULT_HOST=<%=proxy_base_domain%>
  if ssl_nginx_proxy?
    cmds << <<~Desc
      #{dkrun_cmd} -d \
        --name #{ssl_container_name} \
        -v #{certs_path}:/etc/nginx/certs:rw \
        -v /var/run/docker.sock:/var/run/docker.sock:ro \
        --volumes-from #{container_name} \
        jrcs/letsencrypt-nginx-proxy-companion:v1.9.1
    Desc
  end

  system_run cmds
end

before_task :clean do
  system <<~Desc if ssl_nginx_proxy?
    docker rm -f #{ssl_container_name}
  Desc
end

custom_commands do
  desc 'config', 'list dynamic nginx config'
  def config
    container_run <<~Desc
      cat /etc/nginx/conf.d/default.conf
    Desc
  end

  desc 'ssltest', 'test domains'
  def ssltest
    cname = 'nginx-proxy-ssl-test'
    system_run <<~Desc
      #{dkrun_cmd} --name #{cname} -d \
        -e #{proxy_domain_env_for(:whoami)} \
        jwilder/whoami
      sleep 3
      curl -Lv https://#{proxy_domains(:whoami)}
      #docker rm -f #{cname}
    Desc
  end

  desc 'test', 'test domains'
  def test
    cname = 'nginx-proxy-test'
    system_run <<~Desc
      #{dkrun_cmd} --name #{cname} -d \
        -e VIRTUAL_HOST=#{proxy_domains(:whoami1)} \
        jwilder/whoami
      sleep 3
      curl http://#{proxy_domains(:whoami1)}
      docker rm -f #{cname}
    Desc
  end

  desc 'alog', 'nginx access log'
  def alog
    # access.log -> /dev/stdout
    system <<~Desc
      docker exec #{container_name} tail -f /var/log/nginx/access.log
    Desc
  end

  no_commands do
    def ssl_container_name
      "#{container_name}-ssl"
    end
  end
end

__END__

