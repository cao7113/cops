#!/usr/bin/env ruby
require 'pathname'
require 'erb'

rbfile = ARGV[0]
abort "rbfile required!" if rbfile.nil?

rpath = Pathname(rbfile)
abort "rbfile #{rpath.to_s} existed!" if rpath.exist?

rpath.parent.mkpath
extra = ARGV[1..-1].join(' ')

handler = File.basename(__FILE__)
tmpl = DATA.read
erb = ERB.new(tmpl, nil, '%<>')
result = erb.result(binding)
rpath.write(result)
rpath.chmod(0755)
puts "file: #{rpath} generated by #{handler}!"
exec "#{ENV['EDITOR'] || 'vi'} #{rpath}" if extra =~ /(-o|--open)/

__END__
#!/usr/bin/env rundklet
add_note <<~Note
Note

# https://docs.docker.com/develop/develop-images/dockerfile_best-practices
write_dockerfile <<~Desc
  FROM alpine:3.7
  LABEL <%%=image_labels%>
Desc

task :main do
  system <<~Desc
    #{dkrun_cmd} --rm --name #{container_name} #{docker_image} echo hi from container #{container_name}
    # #{compose_cmd} up -d
  Desc
end
