#!/usr/bin/env ruby
require 'pathname'

rbfile = ARGV[0]
abort "rbfile required!" if rbfile.nil?

rpath = Pathname(rbfile)
abort "rbfile #{rpath.to_s} existed!" if rpath.exist?

tmpl = DATA.read
handler = File.basename(__FILE__)
result = ERB.render(tmpl, binding)
rpath.write(result)
rpath.chmod(0755)
puts "file: #{rpath} generated by #{handler}!"
exec "#{ENV['EDITOR'] || 'vi'} #{rpath}" unless ENV['NOT_OPEN']

__END__
#!/usr/bin/env rundklet

add_note <<~Note
  make quick note here
Note

# https://docs.docker.com/develop/develop-images/dockerfile_best-practices
write_dockerfile <<~Desc
  FROM alpine:3.7
  LABEL maintainer=dailyops
  #CMD sh
Desc

task :main do
  system <<~Desc
    # docker run --rm #{docker_image} echo xxx in container shell
    # #{compose_cmd} up -d
  Desc
end

let_cli_magic_start! # make dockerize fun with ruby 
