#!/usr/bin/env rundklet
add_note <<~Note
  try consul in dev mode (in-memory)
  https://hub.docker.com/_/consul/
Note

register :web_port, 18501

write_dockerfile <<~Desc
  FROM consul:1.3.0
  LABEL <%%=image_labels%>
  # use dig, socat
  RUN apk add bind-tools socat
Desc

task :main do
  #-e CONSUL_BIND_INTERFACE=eth0 
  system <<~Desc
    #{dkrun_cmd(named: true)} -d \
      -p #{fetch(:web_port)}:8500 \
      -v #{script_path}/try.d:/consul/config \
      #{docker_image} agent -dev -client 0.0.0.0 \
        -ui -enable-script-checks
  Desc
  #-v #{app_volumes}:/consul/data # #!!! ignore this when in dev mode !!!
end

custom_commands do
  desc 'test', ''
  def test
    container_run <<~Desc
      # get A record
      #dig @127.0.0.1 -p 8600 web.service.consul
      #dig @127.0.0.1 -p 8600 web.service.consul SRV
      # query taged app
      #dig @127.0.0.1 -p 8600 rails.web.service.consul
      #curl http://localhost:8500/v1/catalog/service/web
      #curl http://localhost:8500/v1/health/service/consul?pretty
      
      #consule members
    Desc
  end

  desc 'kv', ''
  def kv
    container_run <<~Desc
      consul kv put try-at "#{Time.now}"
      consul kv get try-at
      consul kv put redis/config/minconns 1
      consul kv get redis/config/minconns
      consul kv put -flags=42 redis/config/users/admin abcd1234
      consul kv get redis/config/users/admin
      consul kv get -detailed redis/config/minconns
      # get all keys
      consul kv get -recurse
      consul kv delete redis/config/minconns
      consul kv delete -recurse redis
      consul kv put -cas -modify-index=123 foo bar
      curl http://127.0.0.1:8500/v1/kv/try-at
      curl http://127.0.0.1:8500/v1/kv/try-at?raw
    Desc
  end

  desc 'webui', 'open webui'
  def webui
    # https://demo.consul.io/ui/dc1/services
    system_run <<~Desc
      open http://localhost:#{fetch(:web_port)}/ui/
    Desc
  end
  map 'ui' => 'webui'
  
  desc 'socat', ''
  def socat
    container_run <<~Desc
      nohup socat -v tcp-l:8181,fork exec:"/bin/cat" &
      nohup consul connect proxy -sidecar-for socat &
      # on another node
      nohup consul connect proxy -sidecar-for web &
      ps aux
    Desc
    #consul connect proxy -service web -upstream socat:9191 &
  end

  desc 'nc', ''
  def nc(port = '9191')
    container_run <<~Desc
      nc 127.0.0.1 #{port}
    Desc
  end

  desc 'intent', ''
  def intent(tp='up')
    cmd = case tp
    when 'up'
      'consul intention create -deny web socat'
    when 'down'
      'consul intention delete web socat'
    end
    container_run cmd
  end

  desc 'reload', 'reload service definitions in /consul/config'
  def reload
    #or send a SIGHUP signal #kill -SIGHUP <pid>
    container_run <<~Desc
      consul reload
    Desc
  end
end

__END__


$ docker run -d -e CONSUL_BIND_INTERFACE=eth0 consul agent -dev -join=172.17.0.2
... server 2 starts
$ docker run -d -e CONSUL_BIND_INTERFACE=eth0 consul agent -dev -join=172.17.0.2
... server 3 starts

$  docker run -d --net=host -e 'CONSUL_LOCAL_CONFIG={"leave_on_terminate": true}' consul agent -bind=<external ip> -retry-join=<root agent ip>

$ docker run -d --net=host -e 'CONSUL_LOCAL_CONFIG={"skip_leave_on_interrupt": true}' consul agent -server -bind=<external ip> -retry-join=<root agent ip> -bootstrap-expect=<number of server agents>

$ docker run -d --net=host -e 'CONSUL_ALLOW_PRIVILEGED_PORTS=' consul -dns-port=53 -recursor=8.8.8.8
