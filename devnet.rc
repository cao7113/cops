export dnet_home=/l/dailyops/devnet
export dnet_name=dev-net
alias dnet="cd $dnet_home"
alias dnetrc="vi $dnet_home/devnet.rc"

# 列出该网络下所有容器
dnetps(){
  docker network inspect -f '{{ range $key, $value := .Containers }}{{ printf "%s\n" $value.Name }}{{ end }}' $dnet_name
}

function dnetupall(){
  init_dnet 
  dnetup dns
  dnetup portainer
  dnetup proxy 
  dnetup pg
  dnetup shareup
}

function dnetup(){
  service=$1
  echo booting up $service

  case $service in
  dns)
    cd $dnet_home/docker-devdns
    docker-compose up -d
    ;;
  gateway|nginx|proxy)
    cd $dnet_home/nginx-proxy
    docker-compose up -d
    ;;
  portainer)
    cd $dnet_home/portainer-compose
    docker-compose up -d
    ;;
  pg)
    cd $dnet_home/docker-postgresql
    docker-compose up -d
    ;;
  bi|metabase)
    cd $dnet_home/metabase
    docker-compose up -d
    ;;
  pgweb)
    cd $dnet_home/pgweb
    docker-compose up -d
    ;;
  shareup)
    cd ~/dev/shareup
    docker-compose up -d
    ;;
  *)
    ;;
  esac
}

# 本地专有网络
function init_dnet(){
  docker network create --driver=bridge $dnet_name
  echo ==create network: $dnet_name
}

return 0
###################################

# 放入docker-compose.yml???
networks:
  dev-net1:
    driver: bridge
    ipam:
      driver: default
      config:
      -
        subnet: 172.16.66.0/24

